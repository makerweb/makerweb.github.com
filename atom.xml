<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Maker's blog]]></title>
  <link href="http://makerweb.github.com/atom.xml" rel="self"/>
  <link href="http://makerweb.github.com/"/>
  <updated>2012-06-04T14:15:35+08:00</updated>
  <id>http://makerweb.github.com/</id>
  <author>
    <name><![CDATA[Maker]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[打过了普通大菠萝]]></title>
    <link href="http://makerweb.github.com/blog/2012/06/04/da-guo-liao-pu-tong-da-bo-luo/"/>
    <updated>2012-06-04T13:54:00+08:00</updated>
    <id>http://makerweb.github.com/blog/2012/06/04/da-guo-liao-pu-tong-da-bo-luo</id>
    <content type="html"><![CDATA[<p>我在美服玩的是一个法师。
上周刚打过普通难度，拍卖行里买了1w多g的装备。现在好厉害阿，关键是换了个高dps的武器，暴雪也真是的，好好的法师去追求高攻武器做什么</p>

<p>同事已经60级了，我什么时候才能满级阿。。。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[从今天开始使用octopress]]></title>
    <link href="http://makerweb.github.com/blog/2012/05/31/cong-jin-tian-kai-shi-shi-yong-octopress/"/>
    <updated>2012-05-31T14:08:00+08:00</updated>
    <id>http://makerweb.github.com/blog/2012/05/31/cong-jin-tian-kai-shi-shi-yong-octopress</id>
    <content type="html"><![CDATA[<ul>
<li>很久以前就想写blog阿。但是自己的确太缺乏恒心了。今天上午发现了这个叫octopress的玩意儿。花了2－3个小时终于搞通了.
在<a href="http://ruby-china.org">ruby-china</a>上面倒是有很多人在推荐这个blog程序，我想多半因为搞Rails的人包括我自己和一些同事都是geek的原因吧.
用markdown语法来写blog是头一次。不用数据库纪录也是头一次，我希望今后会慢慢的完善这个blog的功能，算是锻炼自己了。大概就这样吧</li>
</ul>


<p><strong>接下来的计划</strong><br/>
1. 我没有twitter帐号,把下面哪个tweet取掉<br/>
2. textmate对中文的支持真差，想个办法解决<br/>
3. 黑苹果没有声卡驱动，怎么办呢？<br/>
4. 暂时没有想到</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[把.find方法移到model中]]></title>
    <link href="http://makerweb.github.com/blog/2012/05/31/ba-dot-findfang-fa-yi-dao-modelzhong/"/>
    <updated>2012-05-31T13:51:00+08:00</updated>
    <id>http://makerweb.github.com/blog/2012/05/31/ba-dot-findfang-fa-yi-dao-modelzhong</id>
    <content type="html"><![CDATA[<p>在做项目的过程中，应尽量吧与某个model相关的查询从controller中移到model中，提升相关代码的复用性</p>

<!-- more -->


<p>比如这个查询是在controller中查找所有未完成的任务，然后再desc排序</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">TaskController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="vi">@tasks</span> <span class="o">=</span> <span class="no">Task</span><span class="o">.</span><span class="n">find_all_by_complete</span><span class="p">(</span><span class="ss">:false</span><span class="p">,</span> <span class="ss">:order</span> <span class="o">=&gt;</span> <span class="s2">&quot;created_at DESC&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>先在model中定义一个方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Task</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:project</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">find_incomplete</span>
</span><span class='line'>    <span class="n">find_all_by_complete</span><span class="p">(</span><span class="ss">:false</span><span class="p">,</span> <span class="ss">:order</span> <span class="o">=&gt;</span> <span class="s2">&quot;created_at DESC&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后就可以在controller中调用了。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ProjectsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">show</span>
</span><span class='line'>        <span class="vi">@project</span> <span class="o">=</span> <span class="no">Project</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>        <span class="vi">@tasks</span> <span class="o">=</span> <span class="vi">@project</span><span class="o">.</span><span class="n">tasks</span><span class="o">.</span><span class="n">find_incomplete</span> <span class="c1">#因为Project和Task是一对多关系,所以直接用.连接起来</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[markdown语法测试]]></title>
    <link href="http://makerweb.github.com/blog/2012/05/31/shi-%5B%3F%5D-xia/"/>
    <updated>2012-05-31T10:20:00+08:00</updated>
    <id>http://makerweb.github.com/blog/2012/05/31/shi-[?]-xia</id>
    <content type="html"><![CDATA[<p>在这里纪录一下markdown的语法知识，注意markdown语法不起作用的时候在行尾加上空格,&#8220;`这个字符我居然打不出来。。害我贴代码都只能用复制，用键盘敲出来是§符号，真是搞不懂。</p>

<!-- more -->


<p>这是一个普通段落。</p>

<table>
    <tr>
        <td>Foo</td>
    </tr>
</table>


<p></p>

<p><a href="http://www.dhifi.com">dhifi</a></p>

<h1>This is an H1</h1>

<h2>This is an H2</h2>

<h1>这是 H1</h1>

<h2>这是 H2</h2>

<h3>这是 H3</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="c">&lt;!-- more --&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>

<p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
id sem consectetuer libero luctus adipiscing.</p>

<h2>这是一个标题。</h2>

<ol>
<li>这是第一行列表项。</li>
<li>这是第二行列表项。</li>
</ol>


<p>给出一些例子代码：</p>

<pre><code>return shell_exec("echo $input | $markdown_script");
</code></pre></blockquote>

<ul>
<li>Red</li>
<li>Green</li>
<li><p>Blue</p></li>
<li><p>Bird</p></li>
<li>McHale</li>
<li><p>Parish</p></li>
<li><p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.
Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,
viverra nec, fringilla in, laoreet vitae, risus.</p></li>
<li>Donec sit amet nisl. Aliquam semper ipsum sit amet velit.
Suspendisse id sem consectetuer libero luctus adipiscing.</li>
</ul>


<p>Here is an example of AppleScript:</p>

<pre><code>tell application "Foo"
    beep
end tell
</code></pre>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;footer&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="ni">&amp;copy;</span> 2004 Foo Corporation
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">method</span>
</span><span class='line'>  <span class="vi">@post</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="ss">:all</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">alert</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">as</span> <span class="o">=</span> <span class="s2">&quot;23213&quot;</span>
</span><span class='line'><span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;asdasd&quot;</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>      <span class="nx">arr</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class='line'>      
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>  
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.asd</span><span class="p">{</span><span class="k">background</span><span class="o">:</span><span class="sx">url(/img/asd.png)</span> <span class="k">no-repeat</span> <span class="cp">!important</span><span class="p">;}</span>
</span></code></pre></td></tr></table></div></figure>


<p>This is <a href="http://example.com/" title="Title">an example</a> inline link.</p>

<p><em>single asterisks</em></p>

<p><em>single underscores</em></p>

<p><strong>double asterisks</strong></p>

<p><strong>double underscores</strong></p>

<p><img src="http://makerweb.github.com/path/to/img.jpg" alt="Alt text" /></p>

<p><img src="http://makerweb.github.com/path/to/img.jpg" title="Optional title" alt="Alt text" /></p>
]]></content>
  </entry>
  
</feed>
